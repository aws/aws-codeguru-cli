# Created using https://github.com/aws-samples/aws-codeguru-reviewer-cicd-cdk-sample
name: Self-test and release

on:
  push:
    branches:
      - main

permissions:
    id-token: write
    contents: write
    deployments: write

jobs:
  build:
    name: Build, self-test, release
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build project
      run: ./gradlew clean installDist distZip

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      continue-on-error: true
      id: iam-role
      with:
        role-to-assume: arn:aws:iam::048169001733:role/GuruGitHubCICDRole
        aws-region: us-west-2

    # - name: Self Test
    #   if: steps.iam-role.outcome == 'success'
    #   run: |
    #     ./build/install/aws-codeguru-cli/bin/aws-codeguru-cli --region us-west-2 -r . -s src/main/java -b build/libs -c HEAD^:HEAD --no-prompt

    - name: Get Release Version
      run: |
        echo "::set-output name=TAG_NAME::$(./gradlew properties -q | grep "version:" | awk '{print $2}')"
      id: version

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}      
      with:
        tag_name: ${{ steps.version.outputs.TAG_NAME }}
        release_name: Release ${{ steps.version.outputs.TAG_NAME }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./build/distributions/aws-codeguru-cli-${{ steps.version.outputs.TAG_NAME }}.zip
        asset_name: aws-codeguru-cli.zip
        asset_content_type: application/zip